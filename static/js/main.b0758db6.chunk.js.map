{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","App.module.css","redux/phonebook-actions.js","redux/phonebook-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","redux/phonebook-selectors.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactAdd","createAction","name","number","payload","id","shortid","generate","contactDelite","filterChange","items","createReducer","state","action","some","alert","getNewContact","filter","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistor","persistStore","ContactForm","useState","setName","setNumber","dispatch","useDispatch","handleChange","e","currentTarget","value","resetForm","className","s","formBox","onSubmit","preventDefault","labelName","itemName","inputName","type","pattern","title","required","onChange","labelNumber","itemNumber","inputNumber","buttonAdd","selectorFilter","setSelectorContacts","selectorContacts","lowerCaseFilter","toLowerCase","contact","includes","ContactListItem","ContactList","useSelector","list","map","item","buttonDelete","onClick","Filter","nameFilter","inputFilter","target","App","app","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b0758db6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1kalE\",\"buttonDelete\":\"ContactList_buttonDelete__2CunF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1ktMs\",\"name\":\"ContactListItem_name__3UaRl\",\"number\":\"ContactListItem_number__87_8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameFilter\":\"Filter_nameFilter__3lean\",\"inputFilter\":\"Filter_inputFilter__1nXzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__9uZ-1\"};","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const contactAdd = createAction(\"contact/add\", (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nexport const contactDelite = createAction(\"contact/delite\");\r\nexport const filterChange = createAction(\"filter/change\");\r\nconst Actions = { contactAdd, contactDelite, filterChange }\r\nexport default Actions;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { contactAdd, contactDelite, filterChange } from \"./phonebook-actions\";\r\n\r\nconst initialContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nexport function getNewContact(state, { payload }) {\r\n  const haveContact = state.some(({ name }) => name === payload.name);\r\n  return !haveContact\r\n    ? [...state, payload]\r\n    : alert(`A ${payload.name} with the same name has already been added`);\r\n}\r\n\r\nexport const items = createReducer(initialContacts, {\r\n  [contactAdd]: (state, action) => getNewContact(state, action),\r\n  [contactDelite]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nexport const filter = createReducer(\"\", {\r\n  [filterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./phonebook-reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"Key\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n    logger,\r\n  ],\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import { useState } from \"react\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { contactAdd } from \"../../redux/phonebook-actions\";\r\n// import shortid from \"shortid\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n\r\n      case \"number\":\r\n        return setNumber(value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(contactAdd(name, number));\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  // const nameId = shortid.generate();\r\n  // const numberId = shortid.generate();\r\n\r\n  return (\r\n    <form className={s.formBox} onSubmit={handleSubmit}>\r\n      <label className={s.labelName}>\r\n        <p className={s.itemName}>Name</p>\r\n        <input\r\n          className={s.inputName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          value={name}\r\n          // id={nameId}\r\n        />\r\n      </label>\r\n      <label className={s.labelNumber}>\r\n        <p className={s.itemNumber}>Number</p>\r\n        <input\r\n          className={s.inputNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={number}\r\n          // id={numberId}\r\n        />\r\n      </label>\r\n      <button className={s.buttonAdd} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","export const selectorFilter = (state) => state.contacts.filter;\r\nexport const selectorContacts = (state) => state.contacts.items;\r\n\r\nexport const setSelectorContacts = (state) => {\r\n  const contacts = selectorContacts(state);\r\n  const filter = selectorFilter(state);\r\n\r\n  const lowerCaseFilter = filter.toLowerCase();\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(lowerCaseFilter)\r\n  );\r\n};\r\n","import s from \"./ContactListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactListItem({ name, number }) {\r\n  return (\r\n    <>\r\n      <p className={s.name}>Name: {name}</p>\r\n      <p className={s.number}>Number: {number}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\nexport default ContactListItem;\r\n","import s from \"./ContactList.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactDelite } from '../../redux/phonebook-actions';\r\nimport { setSelectorContacts } from '../../redux/phonebook-selectors';\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nfunction ContactList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(setSelectorContacts);\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <ContactListItem key={id} name={name} number={number} />\r\n          <button\r\n            className={s.buttonDelete}\r\n            type=\"button\"\r\n            onClick={() => dispatch(contactDelite(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import s from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterChange } from \"../../redux/phonebook-actions\";\r\nimport { selectorFilter } from \"../../redux/phonebook-selectors\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(selectorFilter);\r\n\r\n  return (\r\n    <>\r\n      <p className={s.nameFilter}>Find contacts by name</p>\r\n      <input\r\n        className={s.inputFilter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={(e) => dispatch(filterChange(e.target.value))}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport s from \"./App.module.css\";\r\n\r\nexport default function App() {\r\n  \r\n  return (\r\n    <div className={s.app}>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBox\":\"ContactForm_formBox__2iMX1\",\"itemName\":\"ContactForm_itemName__66ez9\",\"itemNumber\":\"ContactForm_itemNumber__3I4kA\",\"inputName\":\"ContactForm_inputName__2jphv\",\"inputNumber\":\"ContactForm_inputNumber__19vWU\",\"buttonAdd\":\"ContactForm_buttonAdd__2SB8P\"};"],"sourceRoot":""}